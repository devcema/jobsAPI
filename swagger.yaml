openapi: 3.0.0
info:
  title: Jobs Api
  contact: {}
  version: "1.0"
servers:
  - url: https://jobsapi-cczz.onrender.com/api/v1
    variables: {}
paths:
  /auth/register:
    post:
      tags:
        - Auth
      summary: Register
      operationId: Register
      parameters: []
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/RegisterRequest"
                - example:
                    name: takyiwaa
                    email: takyiwaa@mail.com
                    password: password
            example:
              name: takyiwaa
              email: takyiwaa@mail.com
              password: password
        required: true
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security: []
  /auth/login:
    post:
      tags:
        - Auth
      summary: Login
      operationId: Login
      parameters: []
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/LoginRequest"
                - example:
                    email: nana@mail.com
                    password: password
            example:
              email: nana@mail.com
              password: password
        required: true
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security: []
  /jobs:
    get:
      tags:
        - Jobs
      summary: Get all jobs
      operationId: Getalljobs
      parameters: []
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security:
        - bearer: []
    post:
      tags:
        - Jobs
      summary: Create job
      operationId: Createjob
      parameters: []
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/CreatejobRequest"
                - example:
                    company: Tesla
                    position: React Native developer
            example:
              company: Tesla
              position: React Native developer
        required: true
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security:
        - bearer: []
  /jobs/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
        description: The job ID
    delete:
      tags:
        - Jobs
      summary: Delete Job
      operationId: DeleteJob
      parameters: []
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security:
        - bearer: []
  /jobs/{id2}:
    parameters:
      - in: path
        name: id2
        schema:
          type: string
        required: true
        description: The job ID
    patch:
      tags:
        - Jobs
      summary: Update job
      operationId: Updatejob
      parameters: []
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/UpdatejobRequest"
                - example:
                    company: Lowes
            example:
              company: Lowes
        required: true
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security:
        - bearer: []
  /jobs/{id3}:
    parameters:
      - in: path
        name: id3
        schema:
          type: string
        required: true
        description: The job ID
    get:
      tags:
        - Jobs
      summary: Get single job
      operationId: Getsinglejob
      parameters: []
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security:
        - bearer: []
components:
  schemas:
    UpdatejobRequest:
      title: UpdatejobRequest
      required:
        - company
      type: object
      properties:
        company:
          type: string
      example:
        company: Lowes
    LoginRequest:
      title: LoginRequest
      required:
        - email
        - password
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      example:
        email: nana@mail.com
        password: password
    RegisterRequest:
      title: RegisterRequest
      required:
        - name
        - email
        - password
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string
      example:
        name: takyiwaa
        email: takyiwaa@mail.com
        password: password
    CreatejobRequest:
      title: CreatejobRequest
      required:
        - company
        - position
      type: object
      properties:
        company:
          type: string
        position:
          type: string
      example:
        company: Tesla
        position: React Native developer
  securitySchemes:
    bearer:
      type: http
      scheme: bearer
security: []
tags:
  - name: Auth
    description: ""
  - name: Jobs
    description: ""
